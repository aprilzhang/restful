package com.aprilsulu.bank.db;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.List;
import java.util.Optional;

import org.hibernate.exception.ConstraintViolationException;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;

import com.aprilsulu.bank.core.Account;

import io.dropwizard.testing.junit.DAOTestRule;

public final class AccountDAOTest {

	@Rule
	public DAOTestRule daoTestRule = DAOTestRule.newBuilder()
	.addEntityClass(Account.class)
	.build();

	private AccountDAO accountDAO;

	@Before
	public void setUp() throws Exception {
		accountDAO = new AccountDAO(daoTestRule.getSessionFactory());
	}

	@Test
	public void createPerson() {
		final Account account = daoTestRule.inTransaction(() -> accountDAO.create(new Account()));
		assertThat(account.getId()).isGreaterThan(0);
		assertThat(account.getBalance()).isEqualTo(0);
		assertThat(accountDAO.findById(account.getId())).isEqualTo(Optional.of(account));
	}

	@Test
	public void findAll() {
		daoTestRule.inTransaction(() -> {
			accountDAO.create(new Account());
			accountDAO.create(new Account());
			accountDAO.create(new Account());
		});

		final List<Account> persons = accountDAO.findAll();
		assertThat(persons).extracting("balance").containsOnly("0", "0", "0");
	}

	@Test(expected = ConstraintViolationException.class)
	public void handlesNullFullName() {
		daoTestRule.inTransaction(() -> accountDAO.create(new Account()));
	}
}
